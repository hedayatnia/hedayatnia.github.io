import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { library } from '@fortawesome/fontawesome-svg-core';
import { fas } from '@fortawesome/free-solid-svg-icons';

let iconList;
let searchMap;
let iconListTitles;

library.add(fas)

const handleIcons = (iconSet) => {
    iconList = Object.entries(iconSet).reduce((object, [library, libraryItems]) => {
        object[library] = Object.values(libraryItems).map(({ iconName }) => iconName);
        return object;
    }, {});

    searchMap = Object.entries(iconList).reduce((array, [library, libraryItems], currentIndex, orgArray) => {
        libraryItems.reduce((object, item) => {
            array.push(object);
            return {
                ...object,
                ...{
                    library,
                    item,
                }
            }
        }, {})
        return array;
    }, [])

    iconListTitles = Object.entries(iconList).reduce((array, [library, libraryItems]) => {
        return [
            ...array,
            ...libraryItems,
        ];
    }, []);
}

handleIcons({ fas });

const iconStyle: React.CSSProperties = {
    height: "100%",
    width: "100%",
    display: "block",
};

const boxStyle: React.CSSProperties = {
    height: "100%",
    width: "100%",
    display: "block",
    overflow: "hidden",
};


// Define type of property
interface EnumControlDescription {
    type: ControlType.Enum
    options: string[]
    optionTitles?: string[]
}

interface Props {
    color: string,
    padding: number,
    radius: number
}

export class FontAwesomeFree extends React.Component<Props> {
    // Set default properties
    static defaultProps = {
        icons: iconListTitles[0],
        color: "rgba(255, 255, 255, 1)",
        bgcolor: "rgba(0, 150, 25, 1)",
        padding: 16,
        radius: 100,
        width: 64,
        height: 64,
    }

    // Items shown in property panel
    static propertyControls: PropertyControls = {
        icons: {
            type: ControlType.Enum,
            options: iconListTitles,
            optionTitles: iconListTitles,
            title: "Icons"
        },
        color: {
            title: "Color",
            type: ControlType.Color
        },
        bgcolor: {
            title: "BG Color",
            type: ControlType.Color
        },
        padding: {
            title: "Padding",
            type: ControlType.Number,
            min: 0,
            max: 100,
            step: 1,
        },
        radius: {
            title: "Radius",
            type: ControlType.Number,
            min: 0,
            max: 100,
            step: 1,
        }
    }

    render() {

        return <div style={{
            ...boxStyle,
            ...{
                background: this.props.bgcolor,
                borderRadius: `${this.props.radius}%`
            }
        }}><FontAwesomeIcon style={{
            ...iconStyle,
            ...{
                color: this.props.color,
                padding: `${this.props.padding}px`
            }
        }} icon={[searchMap.find(item => item.item === this.props.icons).library, this.props.icons]} /></div>;
    }
}